version: '3.8'

services:

  mongodb:
    container_name: testy-mongodb
    image: mongo:5.0.15-focal
    networks:
      - lila-network
    ports: 
      - "127.0.0.1:37017:27017"
    volumes:
      - ./lila:/lila
      - ../db:/data/db
    user: "${UID:-1000}:${GID:-1000}"
    restart: on-failure

  redis:
    container_name: testy-redis
    image: redis:alpine
    networks:
      - lila-network
    restart: on-failure

  lila:
    container_name: testy-lila
    image: testy-lila
    build: 
      context: docker
      dockerfile: lila.Dockerfile
    networks:
      - lila-network
    ports:
      - "127.0.0.1:19663:9663"
    volumes:
      - ./lila:/lila
      - ./lila-db-seed:/lila-db-seed
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /lila
    restart: on-failure
    entrypoint: ./lila run

  lila_fishnet:
    container_name: testy-lila-fishnet
    image: testy-lila
    networks:
      - lila-network
    volumes:
      - ./lila-fishnet:/lila-fishnet
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /lila-fishnet
    restart: on-failure
    entrypoint: sbt run -Dhttp.port=9665 -Dredis.uri="redis://redis"

  lila_ws:
    container_name: testy-lila-ws
    image: testy-lila
    networks:
      - lila-network
    ports:
      - "127.0.0.1:19664:9664"
    volumes:
      - ./lila-ws:/lila-ws
    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /lila-ws
    restart: on-failure
    entrypoint: sbt run -Dmongo.uri="mongodb://mongodb" -Dredis.uri="redis://redis" -Dcsrf.origin=$ORIGIN -Dcookie.name=testy

  fishnet:
    container_name: testy-fishnet-vs
    image: niklasf/fishnet
    networks:
      - lila-network
    restart: on-failure
    entrypoint: /fishnet --endpoint http://lila_fishnet:9665/fishnet --max-backoff 1

  initdb:
    container_name: testy-initdb
    build:
      context: docker
      dockerfile: initdb.Dockerfile
    networks:
      - lila-network
    volumes:
      - ./lila-db-seed:/lila-db-seed
    working_dir: /lila-db-seed

networks:
  lila-network:
    driver: bridge
